@model WaiwardDemo.Models.Ncr

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Ncr</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.NcrID)

        <div class="form-group">
            @Html.LabelFor(model => model.HseqCaseFileID, "Case Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("HseqCaseFileID", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.TextBoxFor(model => model.HseqCaseFile.CaseNo, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.HseqCaseFileID, "", new { @class = "text-danger" })
            </div>
        </div>
       <div class="form-group">
            @Html.LabelFor(model => model.RecordType, "Record Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.RecordType, new { htmlAttributes = new { @class = "form-control" }})*@
                @Html.TextBoxFor(model => model.RecordType, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.RecordType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnteredBy, "Entered By", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.EnteredBy, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.EnteredBy, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.EnteredBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReportedBy, "Reported By", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ReportedBy, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.ReportedBy, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.ReportedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QualityCoordinator, "Quality Coordinator", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.QualityCoordinator, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.QualityCoordinator, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.QualityCoordinator, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.Status, new { @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NcrSource, "Source", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.NcrSource, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NcrSource, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NcrState, "State",htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.NcrState, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NcrState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiscrepancyTypeID, "Discrepancy Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DiscrepancyTypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DiscrepancyTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
